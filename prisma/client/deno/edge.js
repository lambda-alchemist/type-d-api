const exports = {}
Object.defineProperty(exports, "__esModule", { value: true });

import {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  NotFoundError,
  decompressFromBase64,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions
} from '.././runtime/edge-esm.js'

const Prisma = {}

exports.Prisma = Prisma

/**
 * Prisma Client JS version: 4.8.1
 * Query Engine version: d6e67a83f971b175a593ccc12e15c4a757f93ffe
 */
Prisma.prismaVersion = {
  client: "4.8.1",
  engine: "d6e67a83f971b175a593ccc12e15c4a757f93ffe"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.NotFoundError = NotFoundError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = () => (val) => val


/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}


const dirname = '/'

/**
 * Enums
 */
// Based on
// https://github.com/microsoft/TypeScript/issues/3192#issuecomment-261720275
function makeEnum(x) { return x; }

exports.Prisma.QueryMode = makeEnum({
  default: 'default',
  insensitive: 'insensitive'
});

exports.Prisma.SortOrder = makeEnum({
  asc: 'asc',
  desc: 'desc'
});

exports.Prisma.TaskScalarFieldEnum = makeEnum({
  id: 'id',
  name: 'name',
  status: 'status',
  user_id: 'user_id',
  updated_at: 'updated_at',
  created_at: 'created_at'
});

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = makeEnum({
  id: 'id',
  username: 'username',
  email: 'email',
  created_at: 'created_at',
  updated_at: 'updated_at'
});


exports.Prisma.ModelName = makeEnum({
  User: 'User',
  Task: 'Task'
});

const compressedDMMF = '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='
const decompressedDMMF = decompressFromBase64(compressedDMMF)
// We are parsing 2 times, as we want independent objects, because
// DMMFClass introduces circular references in the dmmf object
const dmmf = JSON.parse(decompressedDMMF)
exports.Prisma.dmmf = JSON.parse(decompressedDMMF)

/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "/home/alkemist/code/type-d-api/prisma/client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [],
    "previewFeatures": [
      "deno"
    ],
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null
  },
  "relativePath": "..",
  "clientVersion": "4.8.1",
  "engineVersion": "d6e67a83f971b175a593ccc12e15c4a757f93ffe",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "dataProxy": true
}
config.document = dmmf
config.dirname = dirname

config.inlineSchema = 'CmdlbmVyYXRvciBjbGllbnQgewoJcHJvdmlkZXIgICAgICAgID0gInByaXNtYS1jbGllbnQtanMiCglvdXRwdXQgICAgICAgICAgPSAiLi9jbGllbnQiCglwcmV2aWV3RmVhdHVyZXMgPSBbImRlbm8iXQp9CgpkYXRhc291cmNlIGRiIHsKCXByb3ZpZGVyID0gInBvc3RncmVzcWwiCgl1cmwgICAgICA9IGVudigiREFUQUJBU0VfVVJMIikKfQoKbW9kZWwgVXNlciB7CglpZCAgICAgICAgIFN0cmluZyAgIEBpZCBAZGVmYXVsdCh1dWlkKCkpCgl1c2VybmFtZSAgIFN0cmluZwoJZW1haWwgICAgICBTdHJpbmcKCXBhc3NoYXNoICAgU3RyaW5nICAgQGlnbm9yZQoJc2FsdGhhc2ggICBTdHJpbmcgICBAaWdub3JlCgljcmVhdGVkX2F0IERhdGVUaW1lIEBkZWZhdWx0KG5vdygpKQoJdXBkYXRlZF9hdCBEYXRlVGltZSBAdXBkYXRlZEF0Cgl0YXNrICAgICAgIFRhc2tbXQp9Cgptb2RlbCBUYXNrIHsKCWlkICAgICAgICAgU3RyaW5nICAgQGlkIEBkZWZhdWx0KHV1aWQoKSkKCW5hbWUgICAgICAgU3RyaW5nCglzdGF0dXMgICAgIEJvb2xlYW4gIEBkZWZhdWx0KGZhbHNlKQoJdXNlcl9pZCAgICBTdHJpbmcKCXVwZGF0ZWRfYXQgRGF0ZVRpbWUgQHVwZGF0ZWRBdAoJY3JlYXRlZF9hdCBEYXRlVGltZSBAZGVmYXVsdChub3coKSkKCXVzZXIgICAgICAgVXNlciAgICAgQHJlbGF0aW9uKGZpZWxkczogW3VzZXJfaWRdLCByZWZlcmVuY2VzOiBbaWRdKQp9Cg=='
config.inlineSchemaHash = '4586597356dd00017ffe013e5ee0fdd450537a8a2321bd841c0f7d838e017a62'

config.inlineDatasources = {
  "db": {
    "url": {
      "fromEnvVar": "DATABASE_URL",
      "value": null
    }
  }
}

config.injectableEdgeEnv = {
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
}

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)
export { exports as default, Prisma, PrismaClient }

