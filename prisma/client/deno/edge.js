const exports = {}
Object.defineProperty(exports, "__esModule", { value: true });

import {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  NotFoundError,
  decompressFromBase64,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions
} from '.././runtime/edge-esm.js'

const Prisma = {}

exports.Prisma = Prisma

/**
 * Prisma Client JS version: 4.8.1
 * Query Engine version: d6e67a83f971b175a593ccc12e15c4a757f93ffe
 */
Prisma.prismaVersion = {
  client: "4.8.1",
  engine: "d6e67a83f971b175a593ccc12e15c4a757f93ffe"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.NotFoundError = NotFoundError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = () => (val) => val


/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}


const dirname = '/'

/**
 * Enums
 */
// Based on
// https://github.com/microsoft/TypeScript/issues/3192#issuecomment-261720275
function makeEnum(x) { return x; }

exports.Prisma.QueryMode = makeEnum({
  default: 'default',
  insensitive: 'insensitive'
});

exports.Prisma.SortOrder = makeEnum({
  asc: 'asc',
  desc: 'desc'
});

exports.Prisma.TaskScalarFieldEnum = makeEnum({
  id: 'id',
  user_id: 'user_id',
  name: 'name',
  stat: 'stat',
  updated_at: 'updated_at',
  created_at: 'created_at'
});

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = makeEnum({
  id: 'id',
  username: 'username',
  email: 'email',
  updated_at: 'updated_at',
  created_at: 'created_at'
});


exports.Prisma.ModelName = makeEnum({
  User: 'User',
  Task: 'Task'
});

const compressedDMMF = ''
const decompressedDMMF = decompressFromBase64(compressedDMMF)
// We are parsing 2 times, as we want independent objects, because
// DMMFClass introduces circular references in the dmmf object
const dmmf = JSON.parse(decompressedDMMF)
exports.Prisma.dmmf = JSON.parse(decompressedDMMF)

/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "/home/lambda/code/type-d-api/prisma/client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [],
    "previewFeatures": [
      "deno"
    ],
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../.env"
  },
  "relativePath": "..",
  "clientVersion": "4.8.1",
  "engineVersion": "d6e67a83f971b175a593ccc12e15c4a757f93ffe",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "dataProxy": true
}
config.document = dmmf
config.dirname = dirname

config.inlineSchema = 'CmdlbmVyYXRvciBjbGllbnQgewoJcHJvdmlkZXIgICAgICAgID0gInByaXNtYS1jbGllbnQtanMiCglvdXRwdXQgICAgICAgICAgPSAiLi9jbGllbnQiCglwcmV2aWV3RmVhdHVyZXMgPSBbImRlbm8iXQp9CgpkYXRhc291cmNlIGRiIHsKCXByb3ZpZGVyID0gInBvc3RncmVzcWwiCgl1cmwgICAgICA9IGVudigiU1VQQUJBU0VfVVJMIikKfQoKbW9kZWwgVXNlciB7CglpZCAgICAgICAgIFN0cmluZyAgIEBkYi5VdWlkIEBpZAoJdXNlcm5hbWUgICBTdHJpbmcgICBAZGIuVmFyQ2hhcig2NCkKCWVtYWlsICAgICAgU3RyaW5nICAgQGRiLlZhckNoYXIoOTYpCgl1cGRhdGVkX2F0IERhdGVUaW1lIEBkZWZhdWx0KG5vdygpKSBAdXBkYXRlZEF0CgljcmVhdGVkX2F0IERhdGVUaW1lIEBkZWZhdWx0KG5vdygpKQoJdGFzayAgICAgICBUYXNrW10KfQoKbW9kZWwgVGFzayB7CglpZCAgICAgICAgIFN0cmluZyAgIEBkYi5VdWlkIEBpZAoJdXNlcl9pZCAgICBTdHJpbmcgICBAZGIuVXVpZAoJbmFtZSAgICAgICBTdHJpbmcgICBAZGIuVmFyQ2hhcig5NikKCXN0YXQgICAgICAgQm9vbGVhbiAgQGRlZmF1bHQoZmFsc2UpCgl1cGRhdGVkX2F0IERhdGVUaW1lIEBkZWZhdWx0KG5vdygpKSBAdXBkYXRlZEF0CgljcmVhdGVkX2F0IERhdGVUaW1lIEBkZWZhdWx0KG5vdygpKQoJdXNlciAgICAgICBVc2VyICAgICBAcmVsYXRpb24oZmllbGRzOiBbdXNlcl9pZF0sIHJlZmVyZW5jZXM6IFtpZF0pCn0K'
config.inlineSchemaHash = '17ec93beb9a3555313165e197efa3627ccdd94a3f68a50ce9fde694dc446c5d6'

config.inlineDatasources = {
  "db": {
    "url": {
      "fromEnvVar": "SUPABASE_URL",
      "value": null
    }
  }
}

config.injectableEdgeEnv = {
  parsed: {
    SUPABASE_URL: typeof globalThis !== 'undefined' && globalThis['SUPABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.SUPABASE_URL || undefined
  }
}

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)
export { exports as default, Prisma, PrismaClient }

